version: 2.1

references:
  # environment specific references - aim to avoid conflicts
  go-machine-image: &go_machine_image
    circleci/classic:201808-01
  go-machine-recent-image: &go_machine_recent_image
    ubuntu-1604:201903-01
  go-windows-image: &go_windows_image
    windows-server-2019-vs2019:stable

  # common references
  common_envs: &common_envs
    GOMAXPROCS: 1
    NOMAD_SLOW_TEST: 1
    GOTESTSUM_JUNITFILE: /tmp/test-reports/results.xml
    GOTESTSUM_JSONFILE: /tmp/test-reports/testjsonfile.json
    # disable implicit git paging.  CircleCI runs commands with in a tty
    # making git assume it's an interactive session.
    PAGER: cat
    GIT_PAGER: cat

commands:
  install-buf:
    steps:
      - run:
          name: install buf
          command: |
            sudo ./scripts/vagrant-linux-priv-buf.sh
  install-vault:
    parameters:
      version:
        type: string
        default: 1.2.4
    steps:
      - run:
          name: Install Vault
          command: |
            set -x

            case "${OSTYPE}" in
              linux*)  os="linux" ;;
              darwin*) os="darwin" ;;
              msys*)   os="windows" ;;
              *)       echo "unknown os: ${OSTYPE}"; exit 1 ;;
            esac

            curl -SL --fail -o /tmp/vault.zip https://releases.hashicorp.com/vault/"<< parameters.version >>"/vault_"<< parameters.version >>"_"${os}"_amd64.zip

            if [[ "${os}" != "windows" ]]; then
              sudo unzip -d /usr/local/bin /tmp/vault.zip
              rm -rf /tmp/vault*
            else
              rm -rf c:\Windows\vault.exe
              unzip /tmp/vault.zip -d "/c/Windows"
              rm -rf /tmp/vault*
            fi
  install-consul:
    parameters:
      version:
        type: string
        default: 1.8.3
    steps:
      - run:
          name: Install Consul << parameters.version >>
          command: |
            curl -SL --fail -o /tmp/consul.zip https://releases.hashicorp.com/consul/<< parameters.version >>/consul_<< parameters.version >>_linux_amd64.zip
            sudo unzip -d /usr/local/bin /tmp/consul.zip
            rm -rf /tmp/consul*
  install-golang:
    parameters:
      target_directory:
        type: string
        default: /usr/local
    steps:
      - run:
          name: Install golang
          command: |
            set -x

            echo installing golang ${GOLANG_VERSION}

            case "${OSTYPE}" in
              linux*)  os="linux" ;;
              darwin*) os="darwin" ;;
              msys*)   os="windows" ;;
              *)       echo "unknown os: ${OSTYPE}"; exit 1 ;;
            esac

            if [[ "${os}" != "windows" ]]
            then
              sudo rm -rf << parameters.target_directory >>/go
              sudo mkdir -p << parameters.target_directory >>
              curl -SL --fail -o /tmp/golang.tar.gz https://dl.google.com/go/go${GOLANG_VERSION}.${os}-amd64.tar.gz
              sudo tar -C << parameters.target_directory >> -xzf /tmp/golang.tar.gz
              rm -rf /tmp/golang.tar.gz
            else
              rm -rf << parameters.target_directory >>/go
              mkdir -p <<parameters.target_directory >>
              curl -SL --fail -o /tmp/go.zip https://dl.google.com/go/go${GOLANG_VERSION}.windows-amd64.zip
              unzip -q -o /tmp/go.zip -d << parameters.target_directory >>
              rm -rf /tmp/go.zip
            fi

  install-circleci-local-cli:
    parameters:
      version:
        type: string
        default: 0.1.5879

      sha256:
        type: string
        default: f178ea62c781aec06267017404f87983c87f171fd0e66ef3737916246ae66dd6
    steps:
      - run:
          name: Install CircleCI CLI << parameters.version >>
          command: |
            CCI_VERSION="<< parameters.version >>"
            CCI_SHA256="<< parameters.sha256 >>"

            URL="https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CCI_VERSION}/circleci-cli_${CCI_VERSION}_linux_amd64.tar.gz"

            mkdir -p /tmp/circleci-cli/
            curl --fail --show-error --location \
              -o /tmp/circleci-cli/cli.tar.gz "${URL}"

            echo "$CCI_SHA256 /tmp/circleci-cli/cli.tar.gz" | sha256sum -c

            tar -xz --strip-components=1 \
              -C /tmp/circleci-cli \
              -f /tmp/circleci-cli/cli.tar.gz \
              "circleci-cli_${CCI_VERSION}_linux_amd64/circleci"

            sudo cp /tmp/circleci-cli/circleci /usr/bin/circleci-local-cli

            circleci-local-cli version
  run-tests:
    steps:
      - run:
          name: Running Nomad Tests
          no_output_timeout: 20m
          command: |
            if [ -z $GOTEST_PKGS_EXCLUDE ];
            then
              unset GOTEST_PKGS_EXCLUDE
            else
              unset GOTEST_PKGS
            fi

            if [ ! -z $GOTESTARCH ]; then
              export GOARCH="$GOTESTARCH";
            fi

            mkdir -p /tmp/test-reports
            sudo -E PATH="$GOPATH/bin:/usr/local/go/bin:$PATH" make generate-structs

            if [ ! -z $GOTEST_MOD ]; then
              sudo -E PATH="$GOPATH/bin:/usr/local/go/bin:$PATH" make test-nomad-module
            else
              sudo -E PATH="$GOPATH/bin:/usr/local/go/bin:$PATH" make test-nomad
            fi

executors:
  go:
    working_directory: /go/src/github.com/hashicorp/nomad
    docker:
      - image: docker.mirror.hashicorp.services/golang:1.15.5
    environment:
      <<: *common_envs
      GOPATH: /go

  go-machine:
    working_directory: ~/go/src/github.com/hashicorp/nomad
    machine:
      image: *go_machine_image
    environment: &machine_env
      <<: *common_envs
      GOPATH: /home/circleci/go
      GOLANG_VERSION: 1.15.5

  # uses a more recent image with unattended upgrades disabled properly
  # but seems to break docker builds
  go-machine-recent:
    working_directory: ~/go/src/github.com/hashicorp/nomad
    machine:
      image: *go_machine_recent_image
    environment: *machine_env

  go-macos:
    working_directory: ~/go/src/github.com/hashicorp/nomad
    macos:
      xcode: 11.3.1
    environment:
      <<: *common_envs
      GOPATH: /Users/distiller/go
      GOLANG_VERSION: 1.15.5

  go-windows:
    machine:
      image: *go_windows_image
      resource_class: windows.medium
      shell: bash --login -eo pipefail
    working_directory: c:\gopath\src\github.com\hashicorp\nomad
    environment:
      GOPATH: c:\gopath
      GOBIN: c:\gopath\bin
      GOTESTSUM_PATH: c:\tmp\test-reports
      GOLANG_VERSION: 1.15.5
      GOTESTSUM_VERSION: 0.4.2
      VAULT_VERSION: 1.4.1
